server:
  port: 7070
spring:
  application:
    name: @artifactId@ #拿到POM文件中的值
  profiles:
    active: @facility@

---
# spring cloud tencent 基础设施配置
spring:
  config:
    activate:
      on-profile: tencent
  cloud:
#    inetutils:
#      ignored-interfaces:
#        - eth0
    polaris:
      enabled: true
      address: ${TENCENT_POLARIS_SERVER_ADDR:grpc://@tencent.polaris.server-addr@}
      namespace: ${TENCENT_POLARIS_NAMESPACE:@tencent.polaris.namespace@}
      config:
        address: ${TENCENT_POLARIS_CONFIG_ADDR:grpc://@tencent.polaris.config-addr@}
        data-source: ${TENCENT_POLARIS_DATA_SOURCE:@tencent.polaris.data.source@}
        local-file-root-path: ${TENCENT_POLARIS_LOCAL_DIR:@tencent.polaris.local.dir@}
        groups:
          - name: ${PROFILE:@profile@}
            files:
              - dante-cloud-environment.yaml
          - name: common
            files:
              - dante-cloud-platform.yaml
              - dante-cloud-database-${DATABASE:@database@}.yaml
              - dante-cloud-database.yaml
              - dante-cloud-redis.yaml
              - dante-cloud-cache.yaml
              - dante-cloud-rest.yaml
              - dante-cloud-kafka.yaml
              - dante-cloud-social.yaml
          - name: service
            files:
              - ${spring.application.name}.yaml

logging:
  file:
    name: logs/${spring.application.name}.log
  level:
    root: INFO
    # 关闭不必要的日志
    org.reflections.Reflections: off
    com.ulisesbocchio: error
    # 开发、调试需要的日志
    org.springframework.security: info
    org.springframework.web: debug
    com.alicp.jetcache: debug
    org.springframework.cloud.bus: info
    org.apache.kafka: warn
---
# spring 全家桶基础设施配置
spring:
  config:
    activate:
      on-profile: spring
  cloud:
    inetutils:
      ignored-interfaces:
        - eth0
    zookeeper:
      discovery:
        instance-host: ${spring.cloud.client.ip-address}